<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-4.2.xsd
        http://www.springframework.org/schema/util
        http://www.springframework.org/schema/util/spring-util-4.2.xsd">
        
    <import resource="classpath:/org/hisrc/azw/amazonaws/config.xml"/>

	<bean name="s3://aufzugswaechter/twitter.properties" factory-bean="com.amazonaws.services.s3.AmazonS3Client"
		factory-method="getObject">
		<constructor-arg index="0" value="aufzugswaechter" />
		<constructor-arg index="1" value="twitter.properties" />
	</bean>
	
	<bean name="s3://aufzugswaechter/recaptcha.properties" factory-bean="com.amazonaws.services.s3.AmazonS3Client"
		factory-method="getObject">
		<constructor-arg index="0" value="aufzugswaechter" />
		<constructor-arg index="1" value="recaptcha.properties" />
	</bean>

	<bean name="java.util.Properties" class="java.util.Properties" />

	<bean name="java.util.Properties.load(recaptcha.properties)"
		class="org.springframework.beans.factory.config.MethodInvokingBean">
		<property name="targetObject" ref="java.util.Properties" />
		<property name="targetMethod" value="load" />
		<property name="arguments">
			<bean
				class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
				<property name="targetObject" ref="s3://aufzugswaechter/recaptcha.properties" />
				<property name="targetMethod" value="getObjectContent" />
			</bean>
		</property>
	</bean>


	<bean name="java.util.Properties.load(twitter.properties)"
		class="org.springframework.beans.factory.config.MethodInvokingBean">
		<property name="targetObject" ref="java.util.Properties" />
		<property name="targetMethod" value="load" />
		<property name="arguments">
			<bean
				class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
				<property name="targetObject" ref="s3://aufzugswaechter/twitter.properties" />
				<property name="targetMethod" value="getObjectContent" />
			</bean>
		</property>
	</bean>

	<bean
		class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer"
		depends-on="java.util.Properties.load(twitter.properties)
					java.util.Properties.load(recaptcha.properties)">
		<property name="properties" ref="java.util.Properties" />
		<property name="ignoreUnresolvablePlaceholders" value="false" />
	</bean>

	<bean name="twitter:timeline/user"
		class="org.apache.camel.component.twitter.TwitterEndpointDirect">
		<constructor-arg index="0" value="twitter:timeline/user" />
		<constructor-arg index="1">
			<bean class="org.apache.camel.component.twitter.TwitterComponent" />
		</constructor-arg>
		<constructor-arg index="2">
			<bean class="org.apache.camel.component.twitter.TwitterConfiguration">
				<property name="accessToken" value="${twitter.accessToken}" />
				<property name="accessTokenSecret" value="${twitter.accessTokenSecret}" />
				<property name="consumerKey" value="${twitter.consumerKey}" />
				<property name="consumerSecret" value="${twitter.consumerSecret}" />
			</bean>
		</constructor-arg>
	</bean>

</beans>
